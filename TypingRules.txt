

G |- e :: t1
G, x : t1 |- e' :: t2
--------------------------
G |- let x = e in e' :: t2


G |- f :: a -> b
G |- e :: a
---------------
G |- f e :: b


G, x :: a |- e :: b
--------------------------
G |- \x::a -> e :: a -> b


----------------
G |- nil :: [a]


G |- e :: a
G |- e' :: [a]
-----------------
G |- cons e e' :: [a]


G |- e :: Int
G, n1 :: Int |- e1 :: t
...
G, nm :: Int |- em :: t
-----------------------------------------------
G |- case e of { n1 -> e1; ...; nm -> em } :: t


G |- e :: Bool
G, n1 :: Bool |- e1 :: t
...
G, nm :: Bool |- em :: t
-----------------------------------------------
G |- case e of { n1 -> e1; ...; nm -> em } :: t

G |- e :: [a]
G, n1 :: [a] |- e1 :: t
...
G, nm :: [a] |- em :: t
-----------------------------------------------
G |- case e of { n1 -> e1; ...; nm -> em } :: t

G |- e :: Int
G |- e' :: Int
---------------------
G |- e OP e' :: Int

