-- File generated by the BNF Converter (bnfc 2.9.4).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module REC.SkelREC where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified REC.AbsREC

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transIdent :: REC.AbsREC.Ident -> Result
transIdent x = case x of
  REC.AbsREC.Ident string -> failure x

transExp :: REC.AbsREC.Exp -> Result
transExp x = case x of
  REC.AbsREC.EInt integer -> failure x
  REC.AbsREC.ETimes exp1 exp2 -> failure x
  REC.AbsREC.EPlus exp1 exp2 -> failure x
  REC.AbsREC.LetRec ident idents exp1 exp2 -> failure x
